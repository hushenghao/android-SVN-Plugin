apply plugin: 'groovy'
apply plugin: 'maven'// 本地仓库

//apply from: 'gradle.gradle'// 上传gradle
apply from: 'bintray.gradle'// 上传jcenter

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    // 使用老板本com.android.application插件
    implementation 'com.android.tools.build:gradle:3.0.0'
    // svn操作库
    implementation 'org.tmatesoft.svnkit:svnkit:1.9.3'
}

group = 'com.dede.svnplugin'
version = '0.1.4'

def getRepositoryUrl() {
    return isSnapshot() ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL
}

def isSnapshot() {
    return version.endsWith("SNAPSHOT")
}

def hasAndroidPlugin() {
    return getPlugins().inject(false) { a, b ->
        def classStr = b.getClass().name
        def isAndroid = ("com.android.build.gradle.LibraryPlugin" == classStr) || ("com.android.build.gradle.AppPlugin" == classStr)
        a || isAndroid
    }
}

task sourcesJar(type: Jar) {
    if (hasAndroidPlugin()) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    } else {
        from sourceSets.main.allSource
        classifier = 'sources'
    }
}
artifacts {
    archives sourcesJar
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: repositoryUrl) {
            authentication(userName: USER, password: PASSWORD)
        }
//        repository(url: uri('../repo')) {}
    }
}